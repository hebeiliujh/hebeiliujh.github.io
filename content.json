[{"title":"","date":"2018-03-10T03:50:47.447Z","path":"2018/03/10/react-learn-links/","text":"title: react (native)学习的一些网站date: 2018-03-10 11:50:47tags: React (Nativ)categories: 技术-React印记中文，文档大合集https://docschina.org/ React学习指南 官网https://reactjs.org/docs/hello-world.html 资源 REACT TRAINING / REACT ROUTERhttps://reacttraining.com/react-router/ 初探 React Router 4.0http://blog.csdn.net/sinat_17775997/article/details/69218382 React Router 中文文档https://react-guide.github.io/react-router-cn/index.html 社区http://react-china.org/ React-Native学习指南本指南汇集React-Native各类学习资源，给大家提供便利。指南正在不断的更新，大家有好的资源欢迎Pull Requests！(转载于：https://github.com/reactnativecn/react-native-guide/blob/master/README.md) 同时还有Awesome React Native系列https://github.com/jondot/awesome-react-native 目录 教程 React Native React.js ES6 系列教程 开源APP 图书 组件 工具 资源网站 业界讨论 教程React Native 构建 Facebook F8 2016 App / React Native 开发指南http://f8-app.liaohuqiu.net/ React-Native入门指南https://github.com/vczero/react-native-lesson 30天学习React Native教程https://github.com/fangwei716/30-days-of-react-native React-Native视频教程(部分免费)https://egghead.io/technologies/react React Native 开发培训视频教程（中文|免费）https://www.gitbook.com/book/unbug/react-native-training/details react-native 官方api文档http://facebook.github.io/react-native/docs/getting-started.html react-native中文文档(极客学院)http://wiki.jikexueyuan.com/project/react-native/ react-native中文文档(react native中文网，人工翻译，官网完全同步)http://react-native.cn/docs/getting-started.html react-native第一课http://html-js.com/article/2783 深入浅出 React Native：使用 JavaScript 构建原生应用http://zhuanlan.zhihu.com/FrontendMagazine/19996445 React Native通信机制详解http://blog.cnbang.net/tech/2698/ React Native布局篇https://segmentfault.com/a/1190000002658374 React Native 基础练习指北（一）https://segmentfault.com/a/1190000002645929 React Native 基础练习指北（二）https://segmentfault.com/a/1190000002647733 Diary of Building an iOS App with React Nativehttp://herman.asia/building-a-flashcard-app-with-react-native React Native For Beginners – The Next Big Thing?https://devdactic.com/react-native-for-beginners/ How To Implement A Tab Bar With React Nativehttps://devdactic.com/react-native-tab-bar/ tcomb-form-native使用视频教程(需翻墙)https://react.rocks/example/tcomb-form-native React Native分享记录https://segmentfault.com/a/1190000002678782 React Native构建本地视图组件https://www.dobest.me/article/11 react-native-android-lession(安卓系列教程)https://github.com/yipengmu/react-native-android-lession React Native模块桥接详解https://www.dobest.me/article/14 React Native: 配置和起步http://www.liaohuqiu.net/cn/posts/react-native-1/ React Native: Android 的打包http://www.liaohuqiu.net/cn/posts/react-native-android-package/ ReactNative之原生模块开发并发布——iOS篇http://www.liuchungui.com/blog/2016/05/02/reactnativezhi-yuan-sheng-mo-kuai-kai-fa-bing-fa-bu-iospian/ ReactNative之原生模块开发并发布——android篇http://www.liuchungui.com/blog/2016/05/08/reactnativezhi-yuan-sheng-mo-kuai-kai-fa-bing-fa-bu-androidpian/ react-native的第一课https://github.com/coderyi/blog/blob/master/articles/2016/0122_react-native_first_lesson.md React-Native专题系列文章http://www.lcode.org/react-native/ react native redux FeInn 从0到1让你学会搭建一个APPhttps://github.com/febobo/react-native-redux-FeInn React.js react.js中文文档http://reactjs.cn/ react.js入门教程(gitbook)https://hulufei.gitbooks.io/react-tutorial/content/introduction.html react.js快速入门教程 - 阮一峰http://www.ruanyifeng.com/blog/2015/03/react.html react.js视频教程http://react-china.org/t/reactjs/584 React Native之React速学教程https://github.com/crazycodeboy/RNStudyNotes/tree/master/React%20Native%E4%B9%8BReact%E9%80%9F%E5%AD%A6%E6%95%99%E7%A8%8B ES6 深入浅出ES6（一）：ES6是什么http://www.infoq.com/cn/articles/es6-in-depth-an-introduction 深入浅出ES6（二）：迭代器和for-of循环http://www.infoq.com/cn/articles/es6-in-depth-iterators-and-the-for-of-loop 深入浅出ES6（三）：生成器 Generatorshttp://www.infoq.com/cn/articles/es6-in-depth-generators 深入浅出ES6（四）：模板字符串http://www.infoq.com/cn/articles/es6-in-depth-template-string 深入浅出ES6（五）：不定参数和默认参数http://www.infoq.com/cn/articles/es6-in-depth-rest-parameters-and-defaults 深入浅出ES6（六）：解构Destructuringhttp://www.infoq.com/cn/articles/es6-in-depth-destructuring 深入浅出ES6（七）：箭头函数Arrow Functionshttp://www.infoq.com/cn/articles/es6-in-depth-arrow-functions 深入浅出ES6（八）：Symbolshttp://www.infoq.com/cn/articles/es6-in-depth-symbols 深入浅出ES6（九）：学习Babel和Broccoli，马上就用ES6http://www.infoq.com/cn/articles/es6-in-depth-babel-and-broccoli 深入浅出ES6（十）：集合http://www.infoq.com/cn/articles/es6-in-depth-collections 深入浅出ES6（十一）：生成器Generators，续篇http://www.infoq.com/cn/articles/es6-in-depth-generators-continued 深入浅出ES6（十二）：代理Proxieshttp://www.infoq.com/cn/articles/es6-in-depth-proxies-and-reflect/ 深入浅出ES6（十三）：类Classhttp://www.infoq.com/cn/articles/es6-in-depth-classes 深入浅出ES6（十四）：let和consthttp://www.infoq.com/cn/articles/es6-in-depth-let-and-const 深入浅出ES6（十五）：子类Subclassinghttp://www.infoq.com/cn/articles/es6-in-depth-subclassing 深入浅出ES6（十六）：模块Moduleshttp://www.infoq.com/cn/articles/es6-in-depth-modules 深入浅出ES6（十七）：展望未来http://www.infoq.com/cn/articles/es6-in-depth-the-future 系列教程 深入浅出React（一）：React的设计哲学 - 简单之美http://www.infoq.com/cn/articles/react-art-of-simplity 深入浅出React（二）：React开发神器Webpackhttp://www.infoq.com/cn/articles/react-and-webpack 深入浅出React（三）：理解JSX和组件http://www.infoq.com/cn/articles/react-jsx-and-component 深入浅出React（四）：虚拟DOM Diff算法解析http://www.infoq.com/cn/articles/react-dom-diff 深入浅出React（五）：使用Flux搭建React应用程序架构http://www.infoq.com/cn/articles/react-flux react-webpack-cookbook中文版http://fakefish.github.io/react-webpack-cookbook/ Flex 布局语法教程http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html React 初探http://www.alloyteam.com/2015/04/react-explore/ React虚拟DOM浅析http://www.alloyteam.com/2015/10/react-virtual-analysis-of-the-dom/ react组件间通信http://www.alloyteam.com/2015/07/react-zu-jian-jian-tong-xin/ React 数据流管理架构之 Redux 介绍http://www.alloyteam.com/2015/09/react-redux/ React服务器端渲染实践小结http://www.alloyteam.com/2015/10/8783/ React Native Android 踩坑之旅http://www.alloyteam.com/2015/10/react-native-android-steps-on-tour/ React Native 之 JSBridgehttp://www.alloyteam.com/2015/05/react-native-zhi-jsbridge/ React Native 研究与实践教程https://github.com/crazycodeboy/RNStudyNotes React Native探索系列教程 React Native探索（一）：背景、规划和风险http://www.infoq.com/cn/articles/react-native-overview React Native探索（二）：布局篇http://www.infoq.com/cn/articles/react-native-layout React Native探索（三）：与 react-web 的融合http://www.infoq.com/cn/articles/react-native-web 开源APP 研究源码也是一个很好的学习方式 官方演示Apphttps://github.com/facebook/react-native/tree/master/Examples Facebook F8 Apphttps://github.com/fbsamples/f8app 仿豆瓣APPhttps://github.com/jianxiaoBai/douban GitHub Popular(一个用来查看GitHub最受欢迎与最热项目的App)已上架https://github.com/crazycodeboy/GitHubPopular 奇舞周刊 iOS 版（上架应用）https://github.com/fakefish/Weekly75 react-native-dribbble-apphttps://github.com/catalinmiron/react-native-dribbble-app Gank.io客户端https://github.com/Bob1993/React-Native-Gank Mdcc客户端(优质)https://github.com/Bob1993/mdcc-client Leanote for iOS(云笔记)https://github.com/leanote/leanote-ios-rn ReactNativeRubyChinahttps://github.com/henter/ReactNativeRubyChina HackerNews-React-Nativehttps://github.com/iSimar/HackerNews-React-Native React-Native新闻客户端https://github.com/tabalt/ReactNativeNews newswatch(新闻客户端)https://github.com/bradoyler/newswatch-react-native buyscreen(购买页面)https://github.com/appintheair/react-native-buyscreen V2EX客户端https://github.com/samuel1112/v2er react-native-todohttps://github.com/joemaddalone/react-native-todo react-native-beerhttps://github.com/muratsu/react-native-beer react-native-starshttps://github.com/86/react-native-stars 模仿天猫首页的apphttps://github.com/hugohua/react-native-demo ReactNativeChesshttps://github.com/csarsam/ReactNativeChess react native 编写的音乐软件https://github.com/Johnqing/miumiu react-native-pokedexhttps://github.com/ababol/react-native-pokedex CNode-React-Nativehttps://github.com/SFantasy/CNode-React-Native 8tracks电台客户端https://github.com/voronianski/EightTracksReactNative React-Native实现的计算器https://github.com/yoxisem544/Calculator-using-React-Native 房产搜索apphttps://github.com/jawee/react-native-PropertyFinder 知乎专栏apphttps://github.com/LeezQ/react-native-zhihu-app ForeignExchangeApphttps://github.com/peralmq/ForeignExchangeApp Segmentfault 客户端https://github.com/fakefish/sf-react-native 糗事百科apphttps://github.com/stormhouse/QiuShiReactNative 孢子社区apphttps://github.com/Hi-Rube/baoz-ReactNative 深JS apphttps://github.com/fraserxu/shenjs Den - 房屋销售app*https://github.com/asamiller/den Noder-cnodejs客户端https://github.com/soliury/noder-react-native 知乎日报Android版https://github.com/race604/ZhiHuDaily-React-Native ziliun-react-nativehttps://github.com/sonnylazuardi/ziliun-react-native react-native-weather-apphttps://github.com/shevawen/react-native-weather-app React Native Sample App(Navigation,Flux)https://github.com/taskrabbit/ReactNativeSampleApp TesterHome社区apphttps://github.com/qddegtya/A-ReactNative-TesterHome Finance - 股票报价apphttps://github.com/7kfpun/FinanceReactNative shopping - 购物apphttps://github.com/bigsui/shopping-react-native zhuiyuan - 追源cms apphttps://github.com/kazaff/ZhuiYuanDemo uestc-bbs-react-native - UESTC清水河畔RN客户端(with Redux)https://github.com/just4fun/uestc-bbs-react-native react-native-nw-react-calculator(iOS/Android、Web、桌面多端)https://github.com/benoitvallon/react-native-nw-react-calculator react-native-nba-apphttps://github.com/wwayne/react-native-nba-app 开源中国的Git@OSC客户端http://git.oschina.net/rplees/react-native-gitosc rn_bycloud 帮瀛律师端apphttps://github.com/liuchungui/rn_bycloud ReactNativeRollingExampleshttps://github.com/joggerplus/ReactNativeRollingExamples Reading App Write In React-Native（Studying and Programinghttps://github.com/attentiveness/reading 数独 - 重拾纯粹数独的乐趣https://github.com/nihgwu/react-native-sudoku Shop-React-Nativehttps://github.com/EleTeam/Shop-React-Native 掘金客户端https://github.com/wangdicoder/JueJinClient cnblogs 客户端https://github.com/togayther/react-native-cnblogs CC 速成班https://github.com/1c7/CrashCourse-Chinese-ReactNative-App Movieapphttps://github.com/junedomingo/movieapp React Native Starter Kithttps://github.com/mcnamee/react-native-starter-app 图书 《React Native入门与实战》http://item.jd.com/11844102.html 《React Native开发指南》http://www.ituring.com.cn/book/1846 《React Native跨平台移动应用开发》http://item.jd.com/10372998311.html 《React Native：用JavaScript开发移动应用》http://item.jd.com/11785195.html 组件 由于已经有较好的组件库网站，这里就不做总结。可以直接查看如下网站，过后可能精选一部分优质组件出来 :P React-native组件库（比较全的组件库）https://js.coach/ React Native Moduleshttp://reactnativemodules.com/ 最佳轮播类组件https://github.com/leecade/react-native-swiper react-native-simple-routerhttps://github.com/react-native-simple-router-community/react-native-simple-router react-native-router-fluxhttps://github.com/aksonov/react-native-router-flux 下拉刷新组件https://github.com/jsdf/react-native-refreshable-listview 模态框https://github.com/brentvatne/react-native-modal react-native-navbarhttps://github.com/react-native-fellowship/react-native-navbar 滚动轮播组件https://github.com/appintheair/react-native-looped-carousel HTML显示组件https://github.com/jsdf/react-native-htmlview Material React Native (MRN) - Material Design组件库https://github.com/binggg/mrn react-native-gitfeed - GitHub客户端(iOS/Android)https://github.com/xiekw2010/react-native-gitfeed React-Native-Elements - React Native样式组件库https://github.com/react-native-community/React-Native-Elements Shoutem UI - React Native样式组件库https://github.com/shoutem/ui BlankApp UI - 高可定制和主题化的 React Native 组件库https://github.com/blankapp/ui 工具 react-native-snippets(代码提示)https://github.com/Shrugs/react-native-snippets react-native-babel(使用ES6+)https://github.com/roman01la/react-native-babel sqlite for react-nativehttps://github.com/almost/react-native-sqlite gulp-react-native-css(就像写css一样写React Style)https://github.com/soliury/gulp-react-native-css rnpm(React Native Package Manager)https://github.com/rnpm/rnpm Pepperoni - React Native项目初始化套件https://github.com/futurice/pepperoni-app-kit Deco IDE - React Native IDEhttps://www.decosoftware.com/ ignite - React Native CLI项目生成器https://github.com/infinitered/ignite react-native-renamehttps://github.com/junedomingo/react-native-rename 资源网站 React-native官网http://facebook.github.io/react-native/ React-China社区http://react-china.org/ React Native中文社区http://bbs.react-native.cn/ React-native组件库（比较全的组件库）http://react.parts/ React Native Moduleshttp://reactnativemodules.com/ Use React Native 资讯站(使用技巧及新闻)http://www.reactnative.com/ React Native Toolshttp://www.rntools.co/ 11款React Native开源移动 UI 组件http://www.oschina.net/news/61214/11-react-native-ui-components 稀土掘金的 React 标签http://gold.xitu.io/#/tag/React.js http://gold.xitu.io/#/tag/React%20Native 业界讨论 跨平台开发时代的 (再次) 到来？（ Xamarin，NativeScript 和 React Native 对比）http://onevcat.com/2015/03/cross-platform/ 谈谈 React Native - 唐巧http://blog.devtang.com/blog/2015/02/01/talk-about-react-native/ 如何评价React-Native?https://www.zhihu.com/question/27852694/answer/43990708 React Native概述：背景、规划和风险http://div.io/topic/938 Native与Web的融合 - Qcon中React-Native演讲http://www.infoq.com/cn/presentations/the-fusion-of-native-and-web 使用React Native一年后的感受http://www.dobest.me/blog/2016/06/12/%E4%BD%BF%E7%94%A8React%20Native%E4%B8%80%E5%B9%B4%E5%90%8E%E7%9A%84%E6%84%9F%E5%8F%97/ Weex &amp; ReactNative &amp; JSPatch大对比http://awhisper.github.io/2016/07/22/Weex-ReactNative-JSPatch/ weex&amp;ReactNative对比https://zhuanlan.zhihu.com/p/21677103","tags":[]},{"title":"正则表达式的一些实践","date":"2018-03-02T01:46:53.000Z","path":"2018/03/02/some-RegExp/","text":"一、校验数字的表达式1 数字：^[0-9]$2 n位的数字：^\\d{n}$3 至少n位的数字：^\\d{n,}$4 m-n位的数字：^\\d{m,n}$5 零和非零开头的数字：^(0|[1-9][0-9])$6 非零开头的最多带两位小数的数字：^([1-9][0-9])+(.[0-9]{1,2})?$7 带1-2位小数的正数或负数：^(-)?\\d+(.\\d{1,2})?$8 正数、负数、和小数：^(-|+)?\\d+(.\\d+)?$9 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$10 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$11 非零的正整数：^[1-9]\\d$ 或 ^([1-9][0-9]){1,3}$ 或 ^+?[1-9][0-9]$12 非零的负整数：^-[1-9][]0-9”$ 或 ^-[1-9]\\d$13 非负整数：^\\d+$ 或 ^[1-9]\\d|0$14 非正整数：^-[1-9]\\d|0$ 或 ^((-\\d+)|(0+))$15 非负浮点数：^\\d+(.\\d+)?$ 或 ^[1-9]\\d.\\d|0.\\d[1-9]\\d|0?.0+|0$16 非正浮点数：^((-\\d+(.\\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\\d.\\d|0.\\d[1-9]\\d))|0?.0+|0$17 正浮点数：^[1-9]\\d.\\d|0.\\d[1-9]\\d$ 或 ^(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9]))$18 负浮点数：^-([1-9]\\d.\\d|0.\\d[1-9]\\d)$ 或 ^(-(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9])))$19 浮点数：^(-?\\d+)(.\\d+)?$ 或 ^-?([1-9]\\d.\\d|0.\\d[1-9]\\d|0?.0+|0)$ 二、校验字符的表达式1 汉字：^[\\u4e00-\\u9fa5]{0,}$2 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$3 长度为3-20的所有字符：^.{3,20}$4 由26个英文字母组成的字符串：^[A-Za-z]+$5 由26个大写英文字母组成的字符串：^[A-Z]+$6 由26个小写英文字母组成的字符串：^[a-z]+$7 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$8 由数字、26个英文字母或者下划线组成的字符串：^\\w+$ 或 ^\\w{3,20}$9 中文、英文、数字包括下划线：^[\\u4E00-\\u9FA5A-Za-z0-9_]+$10 中文、英文、数字但不包括下划线等符号：^[\\u4E00-\\u9FA5A-Za-z0-9]+$ 或 ^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$11 可以输入含有^%&amp;’,;=?$\\”等字符：[^%&amp;’,;=?$\\x22]+12 禁止输入含有~的字符：[^~\\x22]+ 三、特殊需求表达式1 Email地址： A: ^\\w+([-+.]\\w+)@\\w+([-.]\\w+).\\w+([-.]\\w+)$ B: /^([a-zA-Z0-9.-])+\\@(([a-zA-Z0-9-])+.)+([a-zA-Z0-9]{2,4})+$/2 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?3 InternetURL：[a-zA-z]+://[^\\s] 或 ^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&amp;=])?$4 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$5 电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^((\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$6 国内电话号码(0511-4405222、021-87888822)：\\d{3}-\\d{8}|\\d{4}-\\d{7}7 身份证号(15位、18位数字)： A: ^\\d{15}|\\d{18}$ B: /^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/ C: 护照：/^1[45][0-9]{7}|[G|E][0-9]{8}|P[0-9]{7}|S[0-9]{7,8}|D[0-9]+$/8 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$9 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9]{4,15}$10 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\\w{5,17}$11 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.\\d)(?=.[a-z])(?=.[A-Z]).{8,10}$12 日期格式：^\\d{4}-\\d{1,2}-\\d{1,2}13 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$14 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$15 钱的输入格式：A.有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：^[1-9][0-9]$B.这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：^(0|[1-9][0-9])$C.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9])$D.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$E.必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：^[0-9]+(.[0-9]{2})?$F.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$G.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})(.[0-9]{1,2})?$H.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3}))(.[0-9]{1,2})?$I.备注：这就是最终结果了,别忘了”+”可以用”“替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里16 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+.[x|X][m|M][l|L]$17 中文字符的正则表达式：[\\u4e00-\\u9fa5]18 双字节字符：[^\\x00-\\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))19 空白行的正则表达式：\\n\\s*\\r (可以用来删除空白行)20 HTML标记的正则表达式：&lt;(\\S?)[^&gt;]&gt;.?&lt;/\\1&gt;|&lt;.? /&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)21 首尾空白字符的正则表达式：^\\s|\\s$或(^\\s)|(\\s$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)22 腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始)23 中国邮政编码：[1-9]\\d{5}(?!\\d) (中国邮政编码为6位数字)24 IP地址：\\d+.\\d+.\\d+.\\d+ (提取IP地址时有用)25 IP地址：((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))原文地址：http://toutiao.com/i6231678548520731137/","tags":[{"name":"Javascript","slug":"Javascript","permalink":"https://hebeiliujh.github.io/tags/Javascript/"}]},{"title":"Professional-Javascript-3","date":"2018-02-24T02:14:52.000Z","path":"2018/02/24/Professional-Javascript-3/","text":"基本概念 ECMAScript 中的基本数据类型包括 Undefined、Null、Boolean、Number 和 String。 与其他语言不同，ECMScript 没有为整数和浮点数值分别定义不同的数据类型，Number 类型可用于表示所有数值。 ECMAScript 中也有一种复杂的数据类型，即 Object 类型，该类型是这门语言中所有对象的基础类型。 严格模式为这门语言中容易出错的地方施加了限制。 ECMAScript 提供了很多与 C 及其他类 C 语言中相同的基本操作符，包括算术操作符、布尔操作符、关系操作符、相等操作符及赋值操作符等。 ECMAScript 从其他语言中借鉴了很多流控制语句，例如 if 语句、for 语句和 switch 语句等。ECMAScript 中的函数与其他语言中的函数有诸多不同之处。 无须指定函数的返回值，因为任何 ECMAScript 函数都可以在任何时候返回任何值。 实际上，未指定返回值的函数返回的是一个特殊的 undefined 值。 ECMAScript 中也没有函数签名的概念，因为其函数参数是以一个包含零或多个值的数组的形式传递的。 可以向 ECMAScript 函数传递任意数量的参数，并且可以通过 arguments 对象来访问这些参数。 由于不存在函数签名的特性，ECMAScript 函数不能重载。","tags":[{"name":"Javascript","slug":"Javascript","permalink":"https://hebeiliujh.github.io/tags/Javascript/"}]},{"title":"HTTP返回状态码及错误大全","date":"2017-09-08T11:40:29.000Z","path":"2017/09/08/http-code/","text":"HTTP返回状态码及错误大全100 “continue”101 “switching protocols”102 “processing”200 “ok”201 “created”202 “accepted”203 “non-authoritative information”204 “no content”205 “reset content”206 “partial content”207 “multi-status”208 “already reported”226 “im used”300 “multiple choices”301 “moved permanently”302 “found”303 “see other”304 “not modified”305 “use proxy”307 “temporary redirect”308 “permanent redirect”400 “bad request”401 “unauthorized”402 “payment required”403 “forbidden”404 “not found”405 “method not allowed”406 “not acceptable”407 “proxy authentication required”408 “request timeout”409 “conflict”410 “gone”411 “length required”412 “precondition failed”413 “payload too large”414 “uri too long”415 “unsupported media type”416 “range not satisfiable”417 “expectation failed”418 “I’m a teapot”422 “unprocessable entity”423 “locked”424 “failed dependency”426 “upgrade required”428 “precondition required”429 “too many requests”431 “request header fields too large”500 “internal server error”501 “not implemented”502 “bad gateway”503 “service unavailable”504 “gateway timeout”505 “http version not supported”506 “variant also negotiates”507 “insufficient storage”508 “loop detected”510 “not extended”511 “network authentication required”","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://hebeiliujh.github.io/tags/Hexo/"}]},{"title":"React Native 组件生命周期","date":"2017-08-30T03:12:57.000Z","path":"2017/08/30/reactnative-lifecycle/","text":"React Native中的component存在生命周期 getDefaultProps object getDefaultProps()执行过一次后，被创建的类会有缓存，映射的值会存在this.props,前提是这个prop不是父组件指定的这个方法在对象被创建之前执行，因此不能在方法内调用this.props ，另外，注意任何getDefaultProps()返回的对象在实例中共享，不是复制 getInitialState object getInitialState()控件加载之前执行，返回值会被用于state的初始化值 componentWillMount void componentWillMount()执行一次，在初始化render之前执行，如果在这个方法内调用setState，render()知道state发生变化，并且只执行一次 render ReactElement render()render的时候会调用render()会被调用调用render()方法时，首先检查this.props和this.state返回一个子元素，子元素可以是DOM组件或者其他自定义复合控件的虚拟实现如果不想渲染可以返回null或者false，这种场景下，react渲染一个标签，当返回null或者false时，ReactDOM.findDOMNode(this)返回nullrender()方法是很纯净的，这就意味着不要在这个方法里初始化组件的state，每次执行时返回相同的值，不会读写DOM或者与服务器交互，如果必须如服务器交互，在componentDidMount()方法中实现或者其他生命周期的方法中实现，保持render()方法纯净使得服务器更准确，组件更简单 componentDidMount void componentDidMount()在初始化render之后只执行一次，在这个方法内，可以访问任何组件，componentDidMount()方法中的子组件在父组件之前执行从这个函数开始，就可以和 js 其他框架交互了，例如设置计时 setTimeout 或者 setInterval，或者发起网络请求 shouldComponentUpdate 123boolean shouldComponentUpdate( object nextProps, object nextState) 这个方法在初始化render时不会执行，当props或者state发生变化时执行，并且是在render之前，当新的props或者state不需要更新组件时，返回false 123shouldComponentUpdate: function(nextProps, nextState) &#123; return nextProps.id !== this.props.id;&#125; 当shouldComponentUpdate方法返回false时，讲不会执行render()方法，componentWillUpdate和componentDidUpdate方法也不会被调用 默认情况下，shouldComponentUpdate方法返回true防止state快速变化时的问题，但是如果·state不变，props只读，可以直接覆盖shouldComponentUpdate用于比较props和state的变化，决定UI是否更新，当组件比较多时，使用这个方法能有效提高应用性能 componentWillUpdate 123void componentWillUpdate( object nextProps, object nextState) 当props和state发生变化时执行，并且在render方法之前执行，当然初始化render时不执行该方法，需要特别注意的是，在这个函数里面，你就不能使用this.setState来修改状态。这个函数调用之后，就会把nextProps和nextState分别设置到this.props和this.state中。紧接着这个函数，就会调用render()来更新界面了 componentDidUpdate 123void componentDidUpdate( object prevProps, object prevState) 组件更新结束之后执行，在初始化render时不执行 componentWillReceiveProps 123void componentWillReceiveProps( object nextProps) 当props发生变化时执行，初始化render时不执行，在这个回调函数里面，你可以根据属性的变化，通过调用this.setState()来更新你的组件状态，旧的属性还是可以通过this.props来获取,这里调用更新状态是安全的，并不会触发额外的render调用 12345componentWillReceiveProps: function(nextProps) &#123; this.setState(&#123; likesIncreasing: nextProps.likeCount &gt; this.props.likeCount &#125;);&#125; componentWillUnmount void componentWillUnmount() 当组件要被从界面上移除的时候，就会调用componentWillUnmount(),在这个函数中，可以做一些组件相关的清理工作，例如取消计时器、网络请求等","tags":[{"name":"React Native","slug":"React-Native","permalink":"https://hebeiliujh.github.io/tags/React-Native/"}]},{"title":"常用 Git 命令清单","date":"2017-03-16T01:25:44.000Z","path":"2017/03/16/git-cheat-sheet/","text":"2017-03-11 阮一峰 程序员之家作者：阮一峰 我每天使用 Git ，但是很多命令记不住。一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。 Workspace：工作区 Index / Stage：暂存区 Repository：仓库区（或本地仓库） Remote：远程仓库 一、新建代码库 在当前目录新建一个Git代码库$ git init 新建一个目录，将其初始化为Git代码库$ git init [project-name] 下载一个项目和它的整个代码历史$ git clone [url] 二、配置 Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。 显示当前的Git配置$ git config –list 编辑Git配置文件$ git config -e [–global] 设置提交代码时的用户信息$ git config [–global] user.name “[name]”$ git config [–global] user.email “[email address]” 三、增加/删除文件 添加指定文件到暂存区$ git add [file1] [file2] … 添加指定目录到暂存区，包括子目录$ git add [dir] 添加当前目录的所有文件到暂存区$ git add . 删除工作区文件，并且将这次删除放入暂存区$ git rm [file1] [file2] … 停止追踪指定文件，但该文件会保留在工作区$ git rm –cached [file] 改名文件，并且将这个改名放入暂存区$ git mv [file-original] [file-renamed] 四、代码提交 提交暂存区到仓库区$ git commit -m [message] 提交暂存区的指定文件到仓库区$ git commit [file1] [file2] … -m [message] 提交工作区自上次commit之后的变化，直接到仓库区$ git commit -a 提交时显示所有diff信息$ git commit -v 使用一次新的commit，替代上一次提交如果代码没有任何新变化，则用来改写上一次commit的提交信息$ git commit –amend -m [message] 重做上一次commit，并包括指定文件的新变化$ git commit –amend [file1] [file2] … 五、分支 列出所有本地分支$ git branch 列出所有远程分支$ git branch -r 列出所有本地分支和远程分支$ git branch -a 新建一个分支，但依然停留在当前分支$ git branch [branch-name] 新建一个分支，并切换到该分支$ git checkout -b [branch] 新建一个分支，指向指定commit$ git branch [branch] [commit] 新建一个分支，与指定的远程分支建立追踪关系$ git branch –track [branch] [remote-branch] 切换到指定分支，并更新工作区$ git checkout [branch-name] 建立追踪关系，在现有分支与指定的远程分支之间$ git branch –set-upstream [branch] [remote-branch] 合并指定分支到当前分支$ git merge [branch] 选择一个commit，合并进当前分支$ git cherry-pick [commit] 删除分支$ git branch -d [branch-name] 删除远程分支$ git push origin –delete [branch-name] $ git branch -dr [remote/branch] 六、标签 列出所有tag$ git tag 新建一个tag在当前commit$ git tag [tag] 新建一个tag在指定commit$ git tag [tag] [commit] 查看tag信息$ git show [tag] 提交指定tag$ git push [remote] [tag] 提交所有tag$ git push [remote] –tags 新建一个分支，指向某个tag$ git checkout -b [branch] [tag] 七、查看信息 显示有变更的文件$ git status 显示当前分支的版本历史$ git log 显示commit历史，以及每次commit发生变更的文件$ git log –stat 显示某个文件的版本历史，包括文件改名$ git log –follow [file] $ git whatchanged [file] 显示指定文件相关的每一次diff$ git log -p [file] 显示指定文件是什么人在什么时间修改过$ git blame [file] 显示暂存区和工作区的差异$ git diff 显示暂存区和上一个commit的差异$ git diff –cached [file] 显示工作区与当前分支最新commit之间的差异$ git diff HEAD 显示两次提交之间的差异$ git diff [first-branch]…[second-branch] 显示某次提交的元数据和内容变化$ git show [commit] 显示某次提交发生变化的文件$ git show –name-only [commit] 显示某次提交时，某个文件的内容$ git show [commit]:[filename] 显示当前分支的最近几次提交$ git reflog 八、远程同步 下载远程仓库的所有变动$ git fetch [remote] 显示所有远程仓库$ git remote -v 显示某个远程仓库的信息$ git remote show [remote] 增加一个新的远程仓库，并命名$ git remote add [shortname] [url] 取回远程仓库的变化，并与本地分支合并$ git pull [remote] [branch] 上传本地指定分支到远程仓库$ git push [remote] [branch] 强行推送当前分支到远程仓库，即使有冲突$ git push [remote] –force 推送所有分支到远程仓库$ git push [remote] –all 九、撤销 恢复暂存区的指定文件到工作区$ git checkout [file] 恢复某个commit的指定文件到工作区$ git checkout [commit] [file] 恢复上一个commit的所有文件到工作区$ git checkout . 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变$ git reset [file] 重置暂存区与工作区，与上一次commit保持一致$ git reset –hard 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变$ git reset [commit] 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致$ git reset –hard [commit] 重置当前HEAD为指定commit，但保持暂存区和工作区不变$ git reset –keep [commit] 新建一个commit，用来撤销指定commit后者的所有变化都将被前者抵消，并且应用到当前分支$ git revert [commit] 十、其他 生成一个可供发布的压缩包$ git archive 原文：http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html（点击文末阅读原文即可前往）","tags":[{"name":"git","slug":"git","permalink":"https://hebeiliujh.github.io/tags/git/"}]},{"title":"Hello Hexo","date":"2017-03-14T01:25:44.000Z","path":"2017/03/14/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://hebeiliujh.github.io/tags/Hexo/"}]}]